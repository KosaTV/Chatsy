@use "colors" as c;

@mixin flex($positionY: center, $positionX: center) {
	display: flex;
	align-items: $positionY;
	justify-content: $positionX;
}

@mixin grid($rows: 1, $columns: 1) {
	display: grid;
	grid-row: $rows;
	grid-column: $columns;
}

@mixin pseudo($display: block, $pos: absolute, $content: "") {
	content: $content;
	position: $pos;
	display: $display;
}

@mixin hoverEffect($theme: "light", $property: background) {
	&:hover {
		@if ($theme == "light") {
			#{$property}: rgba(30, 30, 30, 0.04);
		} @else {
			#{$property}: rgba(40, 40, 40, 0.4);
		}
		@content;
	}
}

@mixin clickEffect($theme: "light", $property: background) {
	&:active {
		@if ($theme == "light") {
			#{$property}: rgba(30, 30, 30, 0.08);
		} @else {
			#{$property}: rgba(40, 40, 40, 0.7);
		}
		@content;
	}
}

@mixin trans($property: all, $duration: 0.35, $effect: ease) {
	transition: $property #{$duration}s 0s $effect;
}

@mixin media($breakpoint) {
	@if $breakpoint == miniMobile {
		@media only screen and (max-width: 290px) {
			@content;
		}
	} @else if $breakpoint == mobile {
		@media only screen and (max-width: 479px) {
			@content;
		}
	} @else if $breakpoint == largeMobile {
		@media only screen and (max-width: 549px) {
			@content;
		}
	} @else if $breakpoint == tablet {
		@media only screen and (max-width: 1023px) {
			@content;
		}
	} @else if $breakpoint == pc {
		@media only screen and (min-width: 1024px) {
			@content;
		}
	}
}

@keyframes rotate {
	100% {
		transform: translate(-50%, -50%) rotate(1turn);
	}
}

@keyframes clickAnimation {
	0% {
		transform: scale(1);
	}
	50% {
		transform: scale(1.2);
	}
	100% {
		transform: scale(1);
	}
}

@keyframes animation-appear-right {
	0% {
		opacity: 0;
		transform: translateX(50px);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes animation-appear-left {
	0% {
		opacity: 0;
		transform: translateX(-50px);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes appear {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

@keyframes placeholder-pulse {
	0% {
		background: map-get(c.$app-colors, "almostWhite");
	}

	50% {
		background: lighten(map-get(c.$app-colors, "almostWhite"), 3);
	}

	100% {
		background: map-get(c.$app-colors, "almostWhite");
	}
}

@keyframes animation-scale-appear {
	0% {
		opacity: 0;
		transform: scale(2);
	}

	100% {
		opacity: 1;
		transform: scale(1);
	}
}

@keyframes animation-centered-scale-appear {
	0% {
		opacity: 0;
		transform: translate(-50%, -50%) scale(2);
	}

	100% {
		opacity: 1;
		transform: translate(-50%, -50%) scale(1);
	}
}

@mixin click-animation($time: 0.3) {
	animation: clickAnimation #{$time}s 0s ease;
}

@mixin animation-appear($time: "left", $duration: 0.5) {
	animation: animation-appear-#{$time} #{$duration}s 0s ease;
}

@mixin animation-default-appear($time: 0.3, $delay: 0, $state: forwards) {
	animation: appear #{$time}s #{$delay}s ease #{$state};
}

@mixin animation-scale-appear($time: 0.3, $delay: 0, $state: forwards) {
	animation: animation-scale-appear #{$time}s #{$delay}s ease #{$state};
}

@mixin animation-centered-scale-appear($time: 0.3, $delay: 0, $state: forwards) {
	animation: animation-centered-scale-appear #{$time}s #{$delay}s ease #{$state};
}
